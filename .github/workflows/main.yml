# 해당 워크플로우의 타이틀
name: CICD-drawit

# 환경변수
env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: drawit

# Event
## main 브랜치에 한하여 push가 일어날 경우
on:
  push:
    branches: ["main"]

# Jobs
## 이벤트가 발생하면 해야할 작업을 명시
## 테스트, 빌드, 배포 단위로 명시
## 각각의 job은 Runner라는 컨테이너에서 개별적으로 실행
jobs:
 deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    
  # Steps
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}

        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:latest"

      - name: Deploy on EC2 instance
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_IP_ADDRESS }}
          username: ubuntu
          key: ${{ secrets.SSH_PEM_KEY }}
          script: |
            cd /home/ubuntu/Eye_of_AI_Client
            aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws configure set region ${{ env.AWS_REGION }}
            ECR_REGISTRY_LOGIN=$(aws ecr get-login-password --region ${{ env.AWS_REGION }} | sudo docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }})
            sudo docker stop ${{ env.ECR_REPOSITORY }} || true
            sudo docker rm ${{ env.ECR_REPOSITORY }} || true
            sudo docker pull ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
            sudo docker run -d --name eyeofai -p 3080:3080 ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
  
      
